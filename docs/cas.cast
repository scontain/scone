{"version": 2, "width": 210, "height": 50, "timestamp": 1757872948, "env": {"SHELL": "/bin/bash", "TERM": "screen"}, "title": "Installing SCONE CAS"}
[0.013712, "o", "#"]
[0.057471, "o", " "]
[0.101184, "o", "I"]
[0.144946, "o", "n"]
[0.18859, "o", "s"]
[0.232715, "o", "t"]
[0.276775, "o", "a"]
[0.320778, "o", "l"]
[0.364599, "o", "l"]
[0.408177, "o", "i"]
[0.452573, "o", "n"]
[0.4964, "o", "g"]
[0.540997, "o", " "]
[0.584762, "o", "C"]
[0.628296, "o", "A"]
[0.672189, "o", "S"]
[0.7163, "o", " "]
[0.760361, "o", "c"]
[0.80413, "o", "a"]
[0.847985, "o", "s"]
[0.891945, "o", " "]
[0.935912, "o", "i"]
[0.979678, "o", "n"]
[1.023826, "o", " "]
[1.067617, "o", "n"]
[1.11149, "o", "a"]
[1.15527, "o", "m"]
[1.199342, "o", "e"]
[1.243135, "o", "s"]
[1.286946, "o", "p"]
[1.3308, "o", "a"]
[1.374514, "o", "c"]
[1.418201, "o", "e"]
[1.462052, "o", " "]
[1.506248, "o", "d"]
[1.55072, "o", "e"]
[1.594415, "o", "f"]
[1.638354, "o", "a"]
[1.682276, "o", "u"]
[1.726051, "o", "l"]
[1.769786, "o", "t"]
[1.814052, "o", " "]
[1.858031, "o", "."]
[1.902056, "o", "."]
[1.946315, "o", "."]
[1.990436, "o", "\r\n"]
[2.595744, "o", "s"]
[2.639354, "o", "c"]
[2.683202, "o", "r"]
[2.72752, "o", "i"]
[2.77125, "o", "p"]
[2.815154, "o", "t"]
[2.859209, "o", "s"]
[2.902722, "o", "/"]
[2.946523, "o", "i"]
[2.990378, "o", "n"]
[3.034226, "o", "s"]
[3.078197, "o", "t"]
[3.122134, "o", "a"]
[3.16579, "o", "l"]
[3.20995, "o", "l"]
[3.253697, "o", "_"]
[3.297477, "o", "c"]
[3.341224, "o", "a"]
[3.385569, "o", "s"]
[3.429491, "o", "."]
[3.473568, "o", "s"]
[3.518046, "o", "h"]
[3.56237, "o", "\r\n"]
[3.566123, "o", "\u001b[1;35m"]
[3.567725, "o", "# Deploying a CAS instance\r\n\r\nWe deploy a SCONE CAS (i.e., a Configuration and Attestation Service) in the default cluster. \r\n\r\n- First, we check that we have access to the cluster and the SCONE platform is already installed. \r\n- Second, we ask the user for the name and the namespace of the CAS. \r\n- Third, we call 'kubectl provision' to install the CAS.\r\n\r\n## Steps\r\n\r\n\r\n1. Ensure that the SCONE operator is installed and up-to-date (see [scone_operator](scone_operator.md))\r\n\r\n"]
[3.56818, "o", "\u001b[0m"]
[3.661089, "o", "‚úÖ Deployment 'scone-controller-manager' exists in namespace 'scone-system' (i.e., the SCONE Operator is running).\r\n\u001b[1;35m"]
[3.66244, "o", "\r\n2. ensure that the SCONE 'kubectl' plugins are installed:\r\n\r\n"]
[3.662695, "o", "\u001b[0m"]
[3.778359, "o", "\u001b[33mWARNING: No DCAP API Key specified using dcapKey extracted from LAS - not recommended.\u001b[0m\r\n\u001b[33mWARNING: Using external VERSION=6.0.2\u001b[0m\r\n"]
[3.780992, "o", "‚úÖ 'kubectl-provision' plugin is available.\r\n"]
[3.786223, "o", "‚úÖ 'kubectl-scone' plugin is available.\r\n\u001b[1;35m"]
[3.787781, "o", "\r\n\r\n3. Ensure that SGX Plugin and Local Attestation Service (LAS) are 'HEALTHY'\r\n\r\nFirst, we check the state of the SGX Plugin. For the LAS to be healthy, the SGX Plugin must be healthy:\r\n\r\n"]
[3.788021, "o", "\u001b[0m"]
[3.877449, "o", "‚úÖ All sgx resources are HEALTHY.\r\n\u001b[1;35m"]
[3.878836, "o", "\r\nNext, we check that the LAS is healthy:\r\n\r\n\r\n"]
[3.879114, "o", "\u001b[0m"]
[3.968322, "o", "‚úÖ LAS state is HEALTHY.\r\n\u001b[1;35m"]
[3.969821, "o", "\r\n4. We determine your Intel API Key\r\n\r\nPlease visit <https://api.portal.trustedservices.intel.com/manage-subscriptions> to generate or copy your DCAP API Key. Store this API key in a local environment variable: \r\n\r\nexport DCAP_KEY=\"...\"\r\n\r\nIn case your cluster has already been installed, you can extract the DCAP_API_KEY as follows:\r\n\r\n"]
[3.970044, "o", "\u001b[0m"]
[3.970231, "o", "WARNING: No DCAP API Key in environment variable DCAP_KEY specified\r\n"]
[4.071633, "o", "WARNING: Using DCAP_KEY extracted from LAS - not recommended.\r\n\u001b[1;35m"]
[4.073258, "o", "\r\nIn case we use the default DCAP API key, we ask the user for some input:\r\n\r\n"]
[4.073541, "o", "\u001b[0m"]
[4.073706, "o", "\u001b[1;35m"]
[4.074976, "o", "\r\n5. Determine the current stable version of the SCONE platform:\r\n\r\n"]
[4.07516, "o", "\u001b[0m"]
[4.235744, "o", "The lastest stable version of SCONE is 6.0.2\r\n\u001b[1;35m"]
[4.237127, "o", "\r\n6. Ensure that Persistent Volumes exist\r\n\r\nIn some clusters, we have experienced problems with persistent volumes and persisten volume claims. Hence, we check if they exist:\r\n\r\n"]
[4.237291, "o", "\u001b[0müîç Checking if PersistentVolume (PV) and PersistentVolumeClaim (PVC) APIs are available...\r\n"]
[4.237434, "o", "üîÑ Checking for required API resources: persistentvolumes persistentvolumeclaims\r\n"]
[4.364658, "o", "‚úÖ Found API resource: persistentvolumes\r\n"]
[4.36745, "o", "‚úÖ Found API resource: persistentvolumeclaims\r\n"]
[4.367683, "o", "‚úÖ PV and PVC API resources are available.\r\nüîç Checking for available StorageClasses...\r\n"]
[4.469345, "o", "‚úÖ Found StorageClasses:\r\n"]
[4.547659, "o", "NAME                   PROVISIONER                                     RECLAIMPOLICY   VOLUMEBINDINGMODE   ALLOWVOLUMEEXPANSION   AGE\r\nmanual                 kubernetes.io/no-provisioner                    Delete          Immediate           false                "]
[4.54774, "o", "  2y144d\r\nnfs-client (default)   cluster.local/nfs-subdir-external-provisioner   Delete          Immediate           true                   2y290d\r\n"]
[4.648732, "o", "‚úÖ Default StorageClass: nfs-client\r\n\u001b[1;35m"]
[4.650284, "o", "\r\n7. Determine the name and the namespace of the CAS instance\r\n\r\n"]
[4.650466, "o", "\u001b[0m"]
[4.650499, "o", "‚úÖ Using environment variable CAS (if it exists): cas\r\n"]
[4.650748, "o", "‚úÖ Using environment variable CAS_NAMESPACE (if it exists): default\r\n‚úÖ Using CAS: cas\r\n‚úÖ Using namespace: default\r\n\u001b[1;35m"]
[4.652176, "o", "\r\nCheck that this CAS instance does not yet exist:\r\n\r\n"]
[4.652412, "o", "\u001b[0m"]
[4.744274, "o", "‚úÖ No existing CAS resource named 'cas' found in namespace 'default'.\r\n\u001b[1;35m"]
[4.745956, "o", "\r\n8. Confirm that we want to install this CAS\r\n\r\nMake sure that we actually want to install CAS $CAS in the namespace $CAS_NAMESPACE of the current cluster\r\n\r\n"]
[4.746182, "o", "\u001b[0m"]
[4.824012, "o", "üì¶ Current Kubernetes context: central\r\nDo you want to proceed install version 6.0.2 of SCONE CAS cas in namespace default  within this context? [y/N] "]
[6.879581, "o", "y"]
[7.361173, "o", "\r\n"]
[7.361469, "o", "‚úÖ Proceeding with context: central\r\n\u001b[1;35m"]
[7.363275, "o", "\r\n9. Check the number of nodes\r\n\r\nWe expect at least 3 nodes in the Kubernetes cluster that have a healthy LAS, i.e., on these nodes, we can run the CAS and the CAS safety services.\r\n\r\n"]
[7.363545, "o", "\u001b[0m"]
[7.462998, "o", "‚úÖ 4 node(s) with label 'las.scontain.com/ok=true' found ‚Äî OK.\r\n\u001b[1;35m"]
[7.464423, "o", "\r\n10. Installing the CAS \r\n\r\nThe following statement installs the CAS and waits until the CAS becomes healthy:\r\n\r\n"]
[7.464635, "o", "\u001b[0m"]
[7.536536, "o", "\u001b[33mWARNING: Using specified DCAP_KEY=67a7ac82d5f1439a982e12b11025704b\u001b[0m\r\n"]
[7.638716, "o", "\u001b[34m- Checking if CAS 'cas' in namespace 'default' already exists\u001b[0m\r\n"]
[7.733621, "o", "\u001b[34m- Using the default CAS client port. CAS_CLIENT_PORT: 8081\u001b[0m\r\n"]
[7.733696, "o", "\u001b[34m- Using the the value of CAS_CLIENT_PORT as LOCAL_CAS_CLIENT_PORT. LOCAL_CAS_CLIENT_PORT: 8081\u001b[0m\r\n"]
[7.733933, "o", "\u001b[34m- Checking that we have access to kubectl\u001b[0m\r\n"]
[7.734017, "o", "\u001b[34m- Checking that we have access to helm\u001b[0m\r\n"]
[7.734109, "o", "\u001b[34m- Checking that we have access to jq\u001b[0m\r\n"]
[7.734193, "o", "\u001b[34m- Checking that you have access to a Kubernetes cluster.\u001b[0m\r\n"]
[7.829787, "o", "\u001b[34m- Checking that you have access to cosign.\u001b[0m\r\n"]
[7.882299, "o", "\u001b[34m- Checking that you have access to gpg.\u001b[0m\r\n"]
[7.886471, "o", "\u001b[34m- Checking that required directories exist.\u001b[0m\r\n"]
[7.891224, "o", "\u001b[34m- checking if portforward already exists - otherwise, this could result in our port-forward to fail\u001b[0m\r\n"]
[7.910878, "o", "\u001b[34m- Verify image signatures\u001b[0m\r\n"]
[7.91097, "o", "\u001b[34m- Verifying the signature of image 'registry.scontain.com/scone.cloud/sconecli:6.0.2'\u001b[0m\r\n"]
[9.77665, "o", "\u001b[34m-   verification was successful\u001b[0m\r\n\u001b[34m- --- Verify signatures of required cas related images\u001b[0m\r\n"]
[9.777008, "o", "\u001b[34m- Verifying the signature of image 'registry.scontain.com/scone.cloud/cas:6.0.2'\u001b[0m\r\n"]
[11.655227, "o", "\u001b[34m-   verification was successful\u001b[0m\r\n"]
[11.655312, "o", "\u001b[34m- Verifying the signature of image 'registry.scontain.com/scone.cloud/backup-controller:6.0.2'\u001b[0m\r\n"]
[13.516342, "o", "\u001b[34m-   verification was successful\u001b[0m\r\n"]
[13.519483, "o", "\u001b[34m- CAS cas in namespace default does not exist - creating it\u001b[0m\r\n"]
[13.6027, "o", "\u001b[34m- Creating manifest '/home/ubuntu/.cas/owner-config/cas-default-cas-6.0.2-provisioning-step.yaml' for CAS provisioning\u001b[0m\r\n"]
[13.602789, "o", "\u001b[34m-   Downloading https://raw.githubusercontent.com/scontain/manifests/main/6.0.2/cas_provisioning.yaml\u001b[0m\r\n"]
[14.172303, "o", "\u001b[34m-   Verifying signature of https://raw.githubusercontent.com/scontain/manifests/main/6.0.2/cas_provisioning.yaml\u001b[0m\r\n"]
[14.190447, "o", "\u001b[34m- Creating/Applying CAS CR for Provisioning\u001b[0m\r\n"]
[14.642251, "o", "\u001b[34m- Waiting for CAS cas in namespace default to start\u001b[0m\r\n"]
[19.728808, "o", "No resources found in default namespace.\r\n"]
[19.735094, "o", "\u001b[34m- Waiting for CAS cas in namespace default to start\u001b[0m\r\n"]
[24.832285, "o", "No resources found in default namespace.\r\n"]
[24.838266, "o", "\u001b[34m- Waiting for CAS cas in namespace default to start\u001b[0m\r\n"]
[29.924457, "o", "No resources found in default namespace.\r\n"]
[29.929759, "o", "\u001b[34m- Waiting for CAS cas in namespace default to start\u001b[0m\r\n"]
[35.028553, "o", "No resources found in default namespace.\r\n"]
[35.033987, "o", "\u001b[34m- Waiting for CAS cas in namespace default to start\u001b[0m\r\n"]
[40.127042, "o", "\u001b[34m- Found POD 'cas-0'\u001b[0m\r\n\u001b[34m- determining the CAS address\u001b[0m\r\n"]
[40.318037, "o", "\u001b[34m-  CAS address = 10.97.141.232 (SVC name = cas)\u001b[0m\r\n"]
[40.318311, "o", "\u001b[34m- Retrieving CAS_KEY_HASH AND CAS_PROVISIONING_TOKEN from log of pod 'cas-0' in namespace 'default'\u001b[0m\r\n"]
[40.421907, "o", "Error from server (BadRequest): container \"cas\" in pod \"cas-0\" is waiting to start: ContainerCreating\r\n"]
[45.429352, "o", "\u001b[34m- Waiting for CAS key\u001b[0m\r\n"]
[45.52456, "o", "2025-09-14T18:03:11.096847Z  INFO CAS key hash:           4pghhM1U9JxxYh829QuVmbHgo8BK4Jezq1328udenwam3BV75g\r\n"]
[45.74133, "o", "2025-09-14T18:03:11.096629Z  INFO CAS provisioning token: 979b069509ffa7fb288e889e93187565\r\n"]
[46.558406, "o", "6.0.2: Pulling from scone.cloud/backup-controller\r\n"]
[46.562002, "o", "Digest: sha256:10de0edc3e3a1eba94fd9e9cde2caadfca142f9dca018d4f8c838b0ef631d215\r\nStatus: Image is up to date for registry.scontain.com/scone.cloud/backup-controller:6.0.2\r\n"]
[47.023087, "o", "\u001b[34m- Provisioning service 'cas': NAME = 'cas' in namespace 'default' using DCAP-API Key '67a7ac82d5f1439a982e12b11025704b'\u001b[0m\r\n"]
[52.027646, "o", "\u001b[34m- checking if portforward already exists - otherwise, this could result in our port-forward to fail\u001b[0m\r\n"]
[58.445382, "o", "This command will provision and claim ownership of a CAS.\r\n\tThe ownership will be bound to the cryptographic identity used during this provisioning.\r\n\tHolding the owner identity is necessary to change CAS settings, register backups and upgrade to new CAS versions.\r\n\tPlease be sure to store the owner identity securely.\r\n\tNote: If no identity is specified on the command line, the identity stored in the CLI configuration file is used.\r\n"]
[58.445683, "o", "\r\nThis tool seems to run inside of a container.\r\n\tPlease be extra careful that the owner identity is not lost when when the container is removed!\r\n"]
[58.457822, "o", "The provided CAS owner configuration contains DCAP PCS API credentials. Going to attempt to attest CAS using DCAP quote.\r\n"]
[59.124348, "o", "CAS host.docker.internal:8081 at https://host.docker.internal:8081/ is trustworthy\r\nVersion of attested CAS: 6.0.2\r\n"]
[63.55968, "o", "New CAS public key hash: 3LvXWoShJ7mYxXgzwGUXNdYTfu8cCNp1xnfvA4V86pN6otoRtv\r\nNew CAS software public key hash: 3LvXWoShJ7mYxXgzwGUXNdYTfu8cCNp1xnfvA4V86pN6otoRtv\r\nDone, CAS configuration was successfully provisioned. You are now owner of the CAS.\r\n"]
[63.646181, "o", "\u001b[34m- Create owner-identity file for backup-controller policy\u001b[0m\r\n"]
[63.646523, "o", "\u001b[34m-     - Using owner-identity file /home/ubuntu/.cas/identity/config.json\u001b[0m\r\n"]
[66.37866, "o", "\u001b[34m-   Downloading https://raw.githubusercontent.com/scontain/manifests/main/6.0.2/cas-owner.yaml\u001b[0m\r\n"]
[66.962238, "o", "\u001b[34m-   Verifying signature of https://raw.githubusercontent.com/scontain/manifests/main/6.0.2/cas-owner.yaml\u001b[0m\r\n"]
[67.072066, "o", "\u001b[34m-   Downloading https://raw.githubusercontent.com/scontain/manifests/main/6.0.2/backup_policy.yaml\u001b[0m\r\n"]
[67.636189, "o", "\u001b[34m-   Verifying signature of https://raw.githubusercontent.com/scontain/manifests/main/6.0.2/backup_policy.yaml\u001b[0m\r\n"]
[67.646924, "o", "\u001b[34m- Creating Backup Policy cas-owner/primary-backup for CAS cas in namespace default (see file /home/ubuntu/.cas/identity/backup-controller-session-cas-owner_primary-backup.yaml)\u001b[0m\r\n"]
[69.641603, "o", "CAS host.docker.internal:8081 at https://host.docker.internal:8081/ is trustworthy\r\nVersion of attested CAS: 6.0.2\r\n"]
[71.490459, "o", "\r\n"]
[71.490814, "o", "e8a7feca3e70bd20fd4aa7a5b03aea2721126474861998bc7321d1fe74896a9b"]
[71.50648, "o", "Exit: 0\r\n"]
[71.866383, "o", "Warning: Validation of security section raised warning(s)\r\n  Caused by: Using the wildcard (*) in security.attestation.ignore_advisories accepts services with any known and future security issues, which is heavily discouraged for production mode.\r\n"]
[72.171476, "o", "\r\n"]
[72.171979, "o", "83bc3a4bc6e9af276a4b65087348e28b43aa5214a858ae90310644ef0927385d"]
[72.183334, "o", "Exit: 0\r\n"]
[73.191097, "o", "\r\n"]
[73.191449, "o", "cbfa7985e0082376c734ea128a3192d2efe316986369a593ef23cf1ed0ba22e6"]
[73.205728, "o", "Exit: 0\r\n\r\n\u001b[33mPUBLIC CAS_KEY=\u001b[0m"]
[73.65432, "o", "3LvXWoShJ7mYxXgzwGUXNdYTfu8cCNp1xnfvA4V86pN6otoRtv\r\n"]
[73.665228, "o", "\u001b[33mPUBLIC CAS_SOFTWARE_KEY=\u001b[0m"]
[74.025342, "o", "49X29FfHVQWbBcSLrNyoKRgYWbuF5vPqbrA4SFAc3h12ibG1ZP\r\n"]
[74.039355, "o", "\u001b[33mPUBLIC CAS_SESSION_ENCRYPTION_KEY=\u001b[0m"]
[74.408931, "o", "8b332092f4472fbf9a1c55220778291752dc876f8a4d0a4c8f81be7e25e7132e\r\n"]
[74.497407, "o", "\u001b[33mPUBLIC NONCE=b2ac75e84e3c041b8abcdbd3bde81a7a\u001b[0m\r\n"]
[74.587231, "o", "NAME   STATUS    PHASE     PROVISIONED   ATTESTABLE   SNAPSHOTS   MIGRATION   VERSION   AGE\r\ncas    HEALTHY   HEALTHY   Yes           Yes          Persisted   Disabled    6.0.2     60s\r\n"]
[74.590961, "o", "\u001b[34m- Patching CAS CR cas in namespace default (template patch file: https://raw.githubusercontent.com/scontain/manifests/main/6.0.2/cas_patch_probes_and_backup.json, final patch file: /home/ubuntu/.cas/owner-config/cas-default-cas-6.0.2-patch.json)\u001b[0m\r\n"]
[74.591029, "o", "\u001b[34m-   Downloading https://raw.githubusercontent.com/scontain/manifests/main/6.0.2/cas_patch_probes_and_backup.json\u001b[0m\r\n"]
[75.191524, "o", "\u001b[34m-   Verifying signature of https://raw.githubusercontent.com/scontain/manifests/main/6.0.2/cas_patch_probes_and_backup.json\u001b[0m\r\n"]
[75.355205, "o", "cas.services.scone.cloud/cas patched\r\n"]
[75.358875, "o", "\u001b[34m- Creating manifest '/home/ubuntu/.cas/owner-config/cas-default-cas-6.0.2-manifest.yaml' for setting up CAS\u001b[0m\r\n"]
[75.558896, "o", "Waiting for the status field 'phase' of cas 'cas' in namespace 'default' to become 'HEALTHY'\r\nCurrent value: HEALTHY .OK\r\n"]
[75.559167, "o", "\u001b[34m- The manifest of CAS 'cas' in namespace 'default' is stored in /home/ubuntu/.cas/owner-config/cas-default-cas-6.0.2-manifest.yaml\u001b[0m\r\n\u001b[34m-   - You can modify the metadata and spec fields of the manifest and apply the changes with 'kubectl apply -f \"/home/ubuntu/.cas/owner-config/cas-default-cas-6.0.2-manifest.yaml\"\u001b[0m\r\n\u001b[34m- The owner identity of CAS 'cas' in namespace 'default' is stored in directory \"/home/ubuntu/.cas/identity\"\u001b[0m\r\n"]
[75.559262, "o", "\u001b[34m- Done. Shutting down tunnel\u001b[0m\r\n"]
[75.560098, "o", "\u001b[1;35m"]
[75.561878, "o", "\r\nFinally, we show the status of the CAS\r\n\r\n"]
[75.562156, "o", "\u001b[0m"]
[75.659241, "o", "NAME   STATUS    PHASE     PROVISIONED   ATTESTABLE   SNAPSHOTS   MIGRATION   VERSION   AGE\r\ncas    HEALTHY   HEALTHY   Yes           Yes          Persisted   Disabled    6.0.2     61s\r\n"]
[75.663917, "o", "‚úÖ CAS cas installed in default\r\n"]
[76.270154, "o", "#"]
[76.313598, "o", " "]
[76.357538, "o", "D"]
[76.401314, "o", "O"]
[76.445089, "o", "N"]
[76.489183, "o", "E"]
[76.5332, "o", "\r\n"]
